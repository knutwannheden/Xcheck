CheckJavaValidator_CATALOG_NAME_IS_LOWER=Catalog name should start with an upper case letter
CheckJavaValidator_CHECK_IMPLICITLY_FINAL=Redundant ''final'' keyword
CheckJavaValidator_CIRCULAR_DEPENDENCY_IN_INCLUDED_CATALOGS=Circular dependency found
CheckJavaValidator_CONTEXT_TYPE_IS_ECLASS=Context type must extend EObject
CheckJavaValidator_CONTEXT_TYPES_UNIQUE=Context types must be unique
CheckJavaValidator_DEFAULT_SEVERITY_NOT_IN_RANGE=Default severity is not in given range
CheckJavaValidator_DOCUMENTATION_MISSING={0} ''{1}'' has no documentation
CheckJavaValidator_DUPLICATE_PARAMETER_DEFINITION=Duplicate parameter definition
CheckJavaValidator_EMPTY_CATALOG_NAME=Catalog name must not be empty
CheckJavaValidator_EMPTY_PACKAGE_NAME=Package name must not be empty
CheckJavaValidator_EMPTY_PROJECT_NAME=Project name must not be empty
CheckJavaValidator_FORMAL_PARAMETER_TYPE=The type of formal parameters must be specified
CheckJavaValidator_GUARDS_COME_FIRST=Guard expressions must precede other expressions
CheckJavaValidator_ILLEGAL_PACKAGE_NAME=Invalid package name
CheckJavaValidator_ILLEGAL_PROJECT_NAME=Invalid project name
CheckJavaValidator_ILLEGAL_SEVERITY_RANGE_ORDER=Severity ''{0}'' must precede ''{1}''
CheckJavaValidator_IMPLICIT_ISSUED_CHECK=The check is implicitly that of the check definition
CheckJavaValidator_INVALID_GRAMMAR_OF_INCLUDED_CATALOG=The grammar ''{0}'' of included catalog is incompatible with ''{1}''
CheckJavaValidator_ISSUED_BINDINGS=The message requires {0} bindings, not {1} as currently provided
CheckJavaValidator_ISSUE_REFERS_TO_CHECK=An issue expression used outside a check must explicitly refer to a check
CheckJavaValidator_ISSUE_REFERS_TO_EXPLICIT_CHECK=An issue expression used inside a check cannot refer to another check
CheckJavaValidator_ISSUE_REFERS_TO_IMPLICIT_CHECK=The check reference is redundant
CheckJavaValidator_MARKER_INDEX_MANY=The marker index can only be specified for many valued features
CheckJavaValidator_MISSING_ISSUE_EXPRESSION=Constraint must contain at least one issue
CheckJavaValidator_NO_EXPRESSIONS_IN_CONSTRAINT=A context must contain at least one expression
CheckJavaValidator_NO_GUARD_AFTER_ISSUE_IN_CONSTRAINT=Guards must precede issues
CheckJavaValidator_NO_RETURN_IN_CHECK_IMPL=No return expression is allowed in check implementations
CheckJavaValidator_NO_SEVERITY_RANGE_FOR_FINAL_CHECK=Severity ranges may not be defined for final checks
CheckJavaValidator_PACKAGE_NAME_IS_UPPER=Package name should start with a lower case letter
CheckJavaValidator_PROJECT_EXISTS=Project already exists
CheckJavaValidator_PROJECT_NAME_IS_UPPER=Project name should start with a lower case letter
CheckJavaValidator_UNSUPPORTED_FEATURE=Unsupported feature ''{0}'' is ignored


CheckJavaValidator_EMPTY_NAME=is empty
CheckJavaValidator_ILLEGAL_START=cannot start with {0}
CheckJavaValidator_ENDS_WITH_DOT=cannot end with dot
CheckJavaValidator_SEQUENCE_ERROR=sequence {0}
CheckJavaValidator_ILLEGAL_CHARACTER=cannot contain character {0}
CheckJavaValidator_CONTAINS_UPPERCASE=cannot contain upper case letters
CheckJavaValidator_EXISTS=already exists
CheckJavaValidator_STARTS_WITH_LOWERCASE_ERROR=may not start with a lower case letter
CheckJavaValidator_STARTS_WITH_LOWERCASE_WARNING=is discouraged. By convention, it should not start with a lower case letter
CheckJavaValidator_WHITE_SPACE=white space

CheckJavaValidator_CHECK_NAME_STATUS=Check name {0}
CheckJavaValidator_CATALOG_NAME_STATUS=Catalog name {0}
CheckJavaValidator_PROJECT_NAME_STATUS=Project name {0}
CheckJavaValidator_PACKAGE_NAME_STATUS=Package name {0}
CheckJavaValidator_CATEGORY_NAME_STATUS=Category name {0}

