grammar com.avaloq.tools.dslsdk.checkcfg.CheckCfg with org.eclipse.xtext.xbase.Xbase

generate checkcfg "http://www.avaloq.com/tools/dslsdk/checkcfg/CheckCfg"

import "platform:/resource/com.avaloq.tools.dslsdk.check.core/src-gen/com/avaloq/tools/dslsdk/check/Check.ecore" as check
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

CheckConfiguration:
  'check' 'configuration' label=STRING '{'
  (catalogConfigurations+=ConfiguredCatalog)*
  '}'
;

ConfiguredCatalog:
  {ConfiguredCatalog}
	'catalog' catalog=[check::CheckCatalog|QualifiedName] '{'
	(checkConfigurations+=ConfiguredCheck)*
	'}'
;

ConfiguredCheck:
  {ConfiguredCheck}
  /* TODO configure severity? would require modifying the run-time so that not the severity of the annotation is used */
  severity=SeverityKind check=[check::Check|QualifiedName]
  ('(' parameterConfigurations+=ConfiguredParameter (',' parameterConfigurations+=ConfiguredParameter)* ')')?
;

ConfiguredParameter:
  {ConfiguredParameter}
	parameter=[check::FormalParameter|ValidID] '=' newValue=XFormalParameterDefaultValueLiteral
;

// defines restriction of supported parameter types
XFormalParameterDefaultValueLiteral returns xbase::XExpression:
  XBooleanLiteral | XIntLiteral | XStringLiteral
;

// copied from Check, enum cannot be referenced
enum SeverityKind:
  inherit='inherit' | error='error' | warning='warning' | info='info' | ignore='ignore'
;
